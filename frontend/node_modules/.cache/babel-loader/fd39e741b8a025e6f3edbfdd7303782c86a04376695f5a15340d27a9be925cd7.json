{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_switch = _resolveComponent(\"v-switch\");\n  const _component_v_textarea = _resolveComponent(\"v-textarea\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, {\n    fluid: \"\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_switch, {\n      modelValue: _ctx.toKorean,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.toKorean = $event),\n      \"hide-details\": \"\",\n      inset: \"\",\n      label: _ctx.switchLabel\n    }, null, 8 /* PROPS */, [\"modelValue\", \"label\"]), _createVNode(_component_v_textarea, {\n      clearable: \"\",\n      \"clear-icon\": \"mdi-trash-can-outline\",\n      \"auto-grow\": \"\",\n      label: \"한/영타 변환기\",\n      modelValue: _ctx.inputText,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.inputText = $event)\n    }, null, 8 /* PROPS */, [\"modelValue\"]), _createTextVNode(\" \" + _toDisplayString(_ctx.convertInputText), 1 /* TEXT */)]),\n\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"mappings":";;;;;uBACEA,aAecC;IAfDC,KAAK,EAAL;EAAK;sBAChB,MAKY,CALZC,aAKYC;kBAJCC,aAAQ;iEAARA,aAAQ;MACjB,cAAY,EAAZ,EAAY;MACZC,KAAK,EAAL,EAAK;MACJC,KAAK,EAAEF;sDAEZF,aAMcK;MALVC,SAAS,EAAT,EAAS;MACT,YAAU,EAAC,uBAAuB;MAClC,WAAS,EAAT,EAAS;MACTF,KAAK,EAAC,UAAU;kBACPF,cAAS;iEAATA,cAAS;8DACR,GACd,oBAAGA,qBAAgB","names":["_createBlock","_component_v_container","fluid","_createVNode","_component_v_switch","_ctx","inset","label","_component_v_textarea","clearable"],"sourceRoot":"","sources":["/Users/dundung/Desktop/my-repo/typing-converter/frontend/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <v-container fluid>\n    <v-switch\n        v-model=\"toKorean\"\n        hide-details\n        inset\n        :label=\"switchLabel\"\n    ></v-switch>\n    <v-textarea\n        clearable\n        clear-icon=\"mdi-trash-can-outline\"\n        auto-grow\n        label=\"한/영타 변환기\"\n        v-model=\"inputText\"\n    ></v-textarea>\n    {{ convertInputText }}\n  </v-container>\n</template>\n\n<script>\nimport {defineComponent} from \"vue\";\n// Components\n\nexport default defineComponent({\n  name: \"HomeView\",\n\n  data: () => ({\n    toKorean: true,\n    inputText: \"\",\n    ENG_KEY: \"rRseEfaqQtTdwWczxvgkoiOjpuPhynbml\",\n    KOR_KEY: \"ㄱㄲㄴㄷㄸㄹㅁㅂㅃㅅㅆㅇㅈㅉㅊㅋㅌㅍㅎㅏㅐㅑㅒㅓㅔㅕㅖㅗㅛㅜㅠㅡㅣ\",\n    CHO_DATA: \"ㄱㄲㄴㄷㄸㄹㅁㅂㅃㅅㅆㅇㅈㅉㅊㅋㅌㅍㅎ\",\n    JUNG_DATA: \"ㅏㅐㅑㅒㅓㅔㅕㅖㅗㅘㅙㅚㅛㅜㅝㅞㅟㅠㅡㅢㅣ\",\n    JONG_DATA: \"ㄱㄲㄳㄴㄵㄶㄷㄹㄺㄻㄼㄽㄾㄿㅀㅁㅂㅄㅅㅆㅇㅈㅊㅋㅌㅍㅎ\",\n  }),\n\n  computed: {\n    // https://sol-studio.tistory.com/entry/%ED%95%9C%EC%98%81%ED%83%80-%EB%B3%80%ED%99%98%EA%B8%B0\n    convertInputText() {\n      if (this.toKorean) return this.engTypeToKor(this.inputText);\n      return this.korTypeToEng(this.inputText);\n    },\n    switchLabel() {\n      if (this.toKorean) return \"영어를 한글로\"\n      return \"한글을 영어로\"\n    }\n  },\n\n  methods: {\n    engTypeToKor(src) {\n      let res = \"\";\n      if (src.length === 0)\n        return res;\n\n      let 초성 = -1\n      let 중성 = -1\n      let 종성 = -1;\n\n      for (let i = 0; i < src.length; i++) {\n        let ch = src.charAt(i);\n        let p = this.ENG_KEY.indexOf(ch);\n        if (p == -1) {\t\t\t\t// 영자판이 아님\n          // 남아있는 한글이 있으면 처리\n          if (초성 != -1) {\n            if (중성 != -1)\t\t\t\t// 초성+중성+(종성)\n              res += this.makeHangul(초성, 중성, 종성);\n            else\t\t\t\t\t\t\t// 초성만\n              res += this.CHO_DATA.charAt(초성);\n          } else {\n            if (중성 != -1)\t\t\t\t// 중성만\n              res += this.JUNG_DATA.charAt(중성);\n            else if (종성 != -1)\t\t\t// 복자음\n              res += this.JONG_DATA.charAt(종성);\n          }\n          초성 = -1;\n          중성 = -1;\n          종성 = -1;\n          res += ch;\n        } else if (p < 19) {\t\t\t// 자음\n          if (중성 != -1) {\n            if (초성 == -1) {\t\t\t\t\t// 중성만 입력됨, 초성으로\n              res += this.JUNG_DATA.charAt(중성);\n              중성 = -1;\n              초성 = this.CHO_DATA.indexOf(this.KOR_KEY.charAt(p));\n            } else {\t\t\t\t\t\t\t// 종성이다\n              if (종성 == -1) {\t\t\t\t// 종성 입력 중\n                종성 = this.JONG_DATA.indexOf(this.KOR_KEY.charAt(p));\n                if (종성 == -1) {\t\t\t// 종성이 아니라 초성이다\n                  res += this.makeHangul(초성, 중성, 종성);\n                  초성 = this.CHO_DATA.indexOf(this.KOR_KEY.charAt(p));\n                  중성 = -1;\n                }\n              } else if (종성 == 0 && p == 9) {\t\t\t// ㄳ\n                종성 = 2;\n              } else if (종성 == 3 && p == 12) {\t\t\t// ㄵ\n                종성 = 4;\n              } else if (종성 == 3 && p == 18) {\t\t\t// ㄶ\n                종성 = 5;\n              } else if (종성 == 7 && p == 0) {\t\t\t// ㄺ\n                종성 = 8;\n              } else if (종성 == 7 && p == 6) {\t\t\t// ㄻ\n                종성 = 9;\n              } else if (종성 == 7 && p == 7) {\t\t\t// ㄼ\n                종성 = 10;\n              } else if (종성 == 7 && p == 9) {\t\t\t// ㄽ\n                종성 = 11;\n              } else if (종성 == 7 && p == 16) {\t\t\t// ㄾ\n                종성 = 12;\n              } else if (종성 == 7 && p == 17) {\t\t\t// ㄿ\n                종성 = 13;\n              } else if (종성 == 7 && p == 18) {\t\t\t// ㅀ\n                종성 = 14;\n              } else if (종성 == 16 && p == 9) {\t\t\t// ㅄ\n                종성 = 17;\n              } else {\t\t\t\t\t\t// 종성 입력 끝, 초성으로\n                res += this.makeHangul(초성, 중성, 종성);\n                초성 = this.CHO_DATA.indexOf(this.KOR_KEY.charAt(p));\n                중성 = -1;\n                종성 = -1;\n              }\n            }\n          } else {\t\t\t\t\t\t\t\t// 초성 또는 (단/복)자음이다\n            if (초성 == -1) {\t\t\t\t\t// 초성 입력 시작\n              if (종성 != -1) {\t\t\t\t// 복자음 후 초성\n                res += this.JONG_DATA.charAt(종성);\n                종성 = -1;\n              }\n              초성 = this.CHO_DATA.indexOf(this.KOR_KEY.charAt(p));\n            } else if (초성 == 0 && p == 9) {\t\t\t// ㄳ\n              초성 = -1;\n              종성 = 2;\n            } else if (초성 == 2 && p == 12) {\t\t\t// ㄵ\n              초성 = -1;\n              종성 = 4;\n            } else if (초성 == 2 && p == 18) {\t\t\t// ㄶ\n              초성 = -1;\n              종성 = 5;\n            } else if (초성 == 5 && p == 0) {\t\t\t// ㄺ\n              초성 = -1;\n              종성 = 8;\n            } else if (초성 == 5 && p == 6) {\t\t\t// ㄻ\n              초성 = -1;\n              종성 = 9;\n            } else if (초성 == 5 && p == 7) {\t\t\t// ㄼ\n              초성 = -1;\n              종성 = 10;\n            } else if (초성 == 5 && p == 9) {\t\t\t// ㄽ\n              초성 = -1;\n              종성 = 11;\n            } else if (초성 == 5 && p == 16) {\t\t\t// ㄾ\n              초성 = -1;\n              종성 = 12;\n            } else if (초성 == 5 && p == 17) {\t\t\t// ㄿ\n              초성 = -1;\n              종성 = 13;\n            } else if (초성 == 5 && p == 18) {\t\t\t// ㅀ\n              초성 = -1;\n              종성 = 14;\n            } else if (초성 == 7 && p == 9) {\t\t\t// ㅄ\n              초성 = -1;\n              종성 = 17;\n            } else {\t\t\t\t\t\t\t// 단자음을 연타\n              res += this.CHO_DATA.charAt(초성);\n              초성 = this.CHO_DATA.indexOf(this.KOR_KEY.charAt(p));\n            }\n          }\n        } else {\t\t\t\t\t\t\t\t\t// 모음\n          if (종성 != -1) {\t\t\t\t\t\t// (앞글자 종성), 초성+중성\n            // 복자음 다시 분해\n            let newCho;\t\t\t// (임시용) 초성\n            if (종성 == 2) {\t\t\t\t\t// ㄱ, ㅅ\n              종성 = 0;\n              newCho = 9;\n            } else if (종성 == 4) {\t\t\t// ㄴ, ㅈ\n              종성 = 3;\n              newCho = 12;\n            } else if (종성 == 5) {\t\t\t// ㄴ, ㅎ\n              종성 = 3;\n              newCho = 18;\n            } else if (종성 == 8) {\t\t\t// ㄹ, ㄱ\n              종성 = 7;\n              newCho = 0;\n            } else if (종성 == 9) {\t\t\t// ㄹ, ㅁ\n              종성 = 7;\n              newCho = 6;\n            } else if (종성 == 10) {\t\t\t// ㄹ, ㅂ\n              종성 = 7;\n              newCho = 7;\n            } else if (종성 == 11) {\t\t\t// ㄹ, ㅅ\n              종성 = 7;\n              newCho = 9;\n            } else if (종성 == 12) {\t\t\t// ㄹ, ㅌ\n              종성 = 7;\n              newCho = 16;\n            } else if (종성 == 13) {\t\t\t// ㄹ, ㅍ\n              종성 = 7;\n              newCho = 17;\n            } else if (종성 == 14) {\t\t\t// ㄹ, ㅎ\n              종성 = 7;\n              newCho = 18;\n            } else if (종성 == 17) {\t\t\t// ㅂ, ㅅ\n              종성 = 16;\n              newCho = 9;\n            } else {\t\t\t\t\t\t\t// 복자음 아님\n              newCho = this.CHO_DATA.indexOf(this.JONG_DATA.charAt(종성));\n              종성 = -1;\n            }\n            if (초성 != -1)\t\t\t// 앞글자가 초성+중성+(종성)\n              res += this.makeHangul(초성, 중성, 종성);\n            else                    // 복자음만 있음\n              res += this.JONG_DATA.charAt(종성);\n\n            초성 = newCho;\n            중성 = -1;\n            종성 = -1;\n          }\n          if (중성 == -1) {\t\t\t\t\t\t// 중성 입력 중\n            중성 = this.JUNG_DATA.indexOf(this.KOR_KEY.charAt(p));\n          } else if (중성 == 8 && p == 19) {            // ㅘ\n            중성 = 9;\n          } else if (중성 == 8 && p == 20) {            // ㅙ\n            중성 = 10;\n          } else if (중성 == 8 && p == 32) {            // ㅚ\n            중성 = 11;\n          } else if (중성 == 13 && p == 23) {           // ㅝ\n            중성 = 14;\n          } else if (중성 == 13 && p == 24) {           // ㅞ\n            중성 = 15;\n          } else if (중성 == 13 && p == 32) {           // ㅟ\n            중성 = 16;\n          } else if (중성 == 18 && p == 32) {           // ㅢ\n            중성 = 19;\n          } else {\t\t\t// 조합 안되는 모음 입력\n            if (초성 != -1) {\t\t\t// 초성+중성 후 중성\n              res += this.makeHangul(초성, 중성, 종성);\n              초성 = -1;\n            } else\t\t\t\t\t\t// 중성 후 중성\n              res += this.JUNG_DATA.charAt(중성);\n            중성 = -1;\n            res += this.KOR_KEY.charAt(p);\n          }\n        }\n      }\n\n      // 마지막 한글이 있으면 처리\n      if (초성 != -1) {\n        if (중성 != -1)\t\t\t// 초성+중성+(종성)\n          res += this.makeHangul(초성, 중성, 종성);\n        else                \t\t// 초성만\n          res += this.CHO_DATA.charAt(초성);\n      } else {\n        if (중성 != -1)\t\t\t// 중성만\n          res += this.JUNG_DATA.charAt(중성);\n        else {\t\t\t\t\t\t// 복자음\n          if (종성 != -1)\n            res += this.JONG_DATA.charAt(종성);\n        }\n      }\n      return res;\n    },\n\n    makeHangul(초성, 중성, 종성) {\n      return String.fromCharCode(0xac00 + 초성 * 21 * 28 + 중성 * 28 + 종성 + 1);\n    },\n\n    korTypeToEng(src) {\n      let res = \"\";\n      if (src.length === 0)\n        return res;\n\n      for (let i = 0; i < src.length; i++) {\n        let ch = src.charAt(i);\n        let nCode = ch.charCodeAt(0);\n        let nCho = this.CHO_DATA.indexOf(ch), nJung = this.JUNG_DATA.indexOf(ch), nJong = this.JONG_DATA.indexOf(ch);\n        let arrKeyIndex = [-1, -1, -1, -1, -1];\n\n        if (0xac00 <= nCode && nCode <= 0xd7a3) {\n          nCode -= 0xac00;\n          arrKeyIndex[0] = Math.floor(nCode / (21 * 28));\t\t\t// 초성\n          arrKeyIndex[1] = Math.floor(nCode / 28) % 21;\t\t\t// 중성\n          arrKeyIndex[3] = nCode % 28 - 1;\t\t\t\t\t\t// 종성\n        } else if (nCho != -1)\t\t\t// 초성 자음\n          arrKeyIndex[0] = nCho;\n        else if (nJung != -1)\t\t\t// 중성\n          arrKeyIndex[1] = nJung;\n        else if (nJong != -1)\t\t\t// 종성 자음\n          arrKeyIndex[3] = nJong;\n        else\t\t\t\t\t\t\t// 한글이 아님\n          res += ch;\n\n        // 실제 Key Index로 변경. 초성은 순서 동일\n        if (arrKeyIndex[1] != -1) {\n          if (arrKeyIndex[1] == 9) {\t\t\t\t\t// ㅘ\n            arrKeyIndex[1] = 27;\n            arrKeyIndex[2] = 19;\n          } else if (arrKeyIndex[1] == 10) {\t\t\t// ㅙ\n            arrKeyIndex[1] = 27;\n            arrKeyIndex[2] = 20;\n          } else if (arrKeyIndex[1] == 11) {\t\t\t// ㅚ\n            arrKeyIndex[1] = 27;\n            arrKeyIndex[2] = 32;\n          } else if (arrKeyIndex[1] == 14) {\t\t\t// ㅝ\n            arrKeyIndex[1] = 29;\n            arrKeyIndex[2] = 23;\n          } else if (arrKeyIndex[1] == 15) {\t\t\t// ㅞ\n            arrKeyIndex[1] = 29;\n            arrKeyIndex[2] = 24;\n          } else if (arrKeyIndex[1] == 16) {\t\t\t// ㅟ\n            arrKeyIndex[1] = 29;\n            arrKeyIndex[2] = 32;\n          } else if (arrKeyIndex[1] == 19) {\t\t\t// ㅢ\n            arrKeyIndex[1] = 31;\n            arrKeyIndex[2] = 32;\n          } else {\n            arrKeyIndex[1] = this.KOR_KEY.indexOf(this.JUNG_DATA.charAt(arrKeyIndex[1]));\n            arrKeyIndex[2] = -1;\n          }\n        }\n        if (arrKeyIndex[3] != -1) {\n          if (arrKeyIndex[3] == 2) {\t\t\t\t\t// ㄳ\n            arrKeyIndex[3] = 0\n            arrKeyIndex[4] = 9;\n          } else if (arrKeyIndex[3] == 4) {\t\t\t// ㄵ\n            arrKeyIndex[3] = 2;\n            arrKeyIndex[4] = 12;\n          } else if (arrKeyIndex[3] == 5) {\t\t\t// ㄶ\n            arrKeyIndex[3] = 2;\n            arrKeyIndex[4] = 18;\n          } else if (arrKeyIndex[3] == 8) {\t\t\t// ㄺ\n            arrKeyIndex[3] = 5;\n            arrKeyIndex[4] = 0;\n          } else if (arrKeyIndex[3] == 9) {\t\t\t// ㄻ\n            arrKeyIndex[3] = 5;\n            arrKeyIndex[4] = 6;\n          } else if (arrKeyIndex[3] == 10) {\t\t\t// ㄼ\n            arrKeyIndex[3] = 5;\n            arrKeyIndex[4] = 7;\n          } else if (arrKeyIndex[3] == 11) {\t\t\t// ㄽ\n            arrKeyIndex[3] = 5;\n            arrKeyIndex[4] = 9;\n          } else if (arrKeyIndex[3] == 12) {\t\t\t// ㄾ\n            arrKeyIndex[3] = 5;\n            arrKeyIndex[4] = 16;\n          } else if (arrKeyIndex[3] == 13) {\t\t\t// ㄿ\n            arrKeyIndex[3] = 5;\n            arrKeyIndex[4] = 17;\n          } else if (arrKeyIndex[3] == 14) {\t\t\t// ㅀ\n            arrKeyIndex[3] = 5;\n            arrKeyIndex[4] = 18;\n          } else if (arrKeyIndex[3] == 17) {\t\t\t// ㅄ\n            arrKeyIndex[3] = 7;\n            arrKeyIndex[4] = 9;\n          } else {\n            arrKeyIndex[3] = this.KOR_KEY.indexOf(this.JONG_DATA.charAt(arrKeyIndex[3]));\n            arrKeyIndex[4] = -1;\n          }\n        }\n\n        for (let j = 0; j < 5; j++) {\n          if (arrKeyIndex[j] != -1)\n            res += this.ENG_KEY.charAt(arrKeyIndex[j]);\n        }\n      }\n\n      return res;\n    }\n  },\n});\n</script>\n<style scoped>\n@font-face {\n  font-family: 'LINESeedKR-Bd';\n  src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_11-01@1.0/LINESeedKR-Bd.woff2') format('woff2');\n  font-weight: 700;\n  font-style: normal;\n}\n\n* {\n  font-family: 'LINESeedKR-Bd';\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}