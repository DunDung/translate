{"ast":null,"code":"import { defineComponent } from \"vue\";\n// Components\n\nexport default defineComponent({\n  name: \"HomeView\",\n  data: () => ({\n    toKorean: true,\n    inputText: \"\",\n    keyboard: {\n      'ㅂ': 'q',\n      'ㅈ': 'w',\n      'ㄷ': 'e',\n      'ㄱ': 'r',\n      'ㅅ': 't',\n      'ㅛ': 'y',\n      'ㅕ': 'u',\n      'ㅑ': 'i',\n      'ㅐ': 'o',\n      'ㅔ': 'p',\n      'ㅁ': 'a',\n      'ㄴ': 's',\n      'ㅇ': 'd',\n      'ㄹ': 'f',\n      'ㅎ': 'g',\n      'ㅗ': 'h',\n      'ㅓ': 'j',\n      'ㅏ': 'k',\n      'ㅣ': 'l',\n      'ㅋ': 'z',\n      'ㅌ': 'x',\n      'ㅊ': 'c',\n      'ㅍ': 'v',\n      'ㅠ': 'b',\n      'ㅜ': 'n',\n      'ㅡ': 'm'\n    }\n  }),\n  computed: {\n    convertInputText() {\n      let result = '';\n      for (let i = 0; i < this.inputText.length; i++) {\n        if (this.keyboard[this.inputText[i]]) {\n          result += this.keyboard[this.inputText[i]];\n        } else {\n          result += this.inputText[i];\n        }\n      }\n      return result;\n    },\n    switchLabel() {\n      if (this.toKorean) return \"영어를 한글로\";\n      return \"한글을 영어로\";\n    }\n  },\n  methods: {\n    toEnglish(ch) {\n      ;\n      let code = ch.charCodeAt(0);\n      if (code < this.HANGUL_START || code > this.HANGUL_END) {\n        return ch;\n      }\n      const HANGUL_BASE = this.HANGUL_END - this.HANGUL_START + 1;\n      let cho = this.HANGUL_CHOSUNG[Math.floor((code - this.HANGUL_START) / HANGUL_BASE / 21)];\n      let jung = this.HANGUL_JUNGSUNG[Math.floor((code - this.HANGUL_START) / HANGUL_BASE) % 21];\n      let jong = this.HANGUL_JONGSUNG[(code - this.HANGUL_START) % 28];\n      return cho + jung + jong;\n    }\n  }\n});","map":{"version":3,"mappings":"AAoBA,SAASA,eAAc,QAAS,KAAK;AACrC;;AAEA,eAAeA,eAAe,CAAC;EAC7BC,IAAI,EAAE,UAAU;EAEhBC,IAAI,EAAE,OAAO;IACXC,QAAQ,EAAE,IAAI;IACdC,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE;MACR,GAAG,EAAE,GAAG;MAAE,GAAG,EAAE,GAAG;MAAE,GAAG,EAAE,GAAG;MAAE,GAAG,EAAE,GAAG;MAAE,GAAG,EAAE,GAAG;MAAE,GAAG,EAAE,GAAG;MAAE,GAAG,EAAE,GAAG;MAAE,GAAG,EAAE,GAAG;MAAE,GAAG,EAAE,GAAG;MAAE,GAAG,EAAE,GAAG;MAClG,GAAG,EAAE,GAAG;MAAE,GAAG,EAAE,GAAG;MAAE,GAAG,EAAE,GAAG;MAAE,GAAG,EAAE,GAAG;MAAE,GAAG,EAAE,GAAG;MAAE,GAAG,EAAE,GAAG;MAAE,GAAG,EAAE,GAAG;MAAE,GAAG,EAAE,GAAG;MAAE,GAAG,EAAE,GAAG;MACxF,GAAG,EAAE,GAAG;MAAE,GAAG,EAAE,GAAG;MAAE,GAAG,EAAE,GAAG;MAAE,GAAG,EAAE,GAAG;MAAE,GAAG,EAAE,GAAG;MAAE,GAAG,EAAE,GAAG;MAAE,GAAG,EAAE;IACnE;EACF,CAAC,CAAC;EAEFC,QAAQ,EAAE;IACRC,gBAAgB,GAAG;MACjB,IAAIC,MAAK,GAAI,EAAE;MACf,KAAK,IAAIC,IAAI,CAAC,EAAEA,IAAI,IAAI,CAACL,SAAS,CAACM,MAAM,EAAED,CAAC,EAAE,EAAE;QAC9C,IAAI,IAAI,CAACJ,QAAQ,CAAC,IAAI,CAACD,SAAS,CAACK,CAAC,CAAC,CAAC,EAAE;UACpCD,MAAK,IAAK,IAAI,CAACH,QAAQ,CAAC,IAAI,CAACD,SAAS,CAACK,CAAC,CAAC,CAAC;QAC5C,OAAO;UACLD,MAAK,IAAK,IAAI,CAACJ,SAAS,CAACK,CAAC,CAAC;QAC7B;MACF;MACA,OAAOD,MAAM;IACf,CAAC;IACDG,WAAW,GAAE;MACX,IAAI,IAAI,CAACR,QAAQ,EAAE,OAAO,SAAQ;MAClC,OAAO,SAAQ;IACjB;EACF,CAAC;EAEDS,OAAO,EAAE;IACPC,SAAS,CAACC,EAAE,EAAE;MAAC;MACb,IAAIC,IAAG,GAAID,EAAE,CAACE,UAAU,CAAC,CAAC,CAAC;MAE3B,IAAID,IAAG,GAAI,IAAI,CAACE,YAAW,IAAKF,IAAG,GAAI,IAAI,CAACG,UAAU,EAAE;QACtD,OAAOJ,EAAE;MACX;MAEA,MAAMK,WAAU,GAAI,IAAI,CAACD,UAAS,GAAI,IAAI,CAACD,YAAW,GAAI,CAAC;MAE3D,IAAIG,GAAE,GAAI,IAAI,CAACC,cAAc,CAACC,IAAI,CAACC,KAAK,CAAC,CAACR,IAAG,GAAI,IAAI,CAACE,YAAY,IAAIE,WAAU,GAAI,EAAE,CAAC,CAAC;MACxF,IAAIK,IAAG,GAAI,IAAI,CAACC,eAAe,CAACH,IAAI,CAACC,KAAK,CAAC,CAACR,IAAG,GAAI,IAAI,CAACE,YAAY,IAAIE,WAAW,IAAI,EAAE,CAAC;MAC1F,IAAIO,IAAG,GAAI,IAAI,CAACC,eAAe,CAAC,CAACZ,IAAG,GAAI,IAAI,CAACE,YAAY,IAAI,EAAE,CAAC;MAEhE,OAAOG,GAAE,GAAII,IAAG,GAAIE,IAAI;IAC1B;EACF;AACF,CAAC,CAAC","names":["defineComponent","name","data","toKorean","inputText","keyboard","computed","convertInputText","result","i","length","switchLabel","methods","toEnglish","ch","code","charCodeAt","HANGUL_START","HANGUL_END","HANGUL_BASE","cho","HANGUL_CHOSUNG","Math","floor","jung","HANGUL_JUNGSUNG","jong","HANGUL_JONGSUNG"],"sourceRoot":"","sources":["/Users/dundung/Desktop/my-repo/typing-converter/frontend/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <v-container fluid>\n    <v-switch\n        v-model=\"toKorean\"\n        hide-details\n        inset\n        :label=\"switchLabel\"\n    ></v-switch>\n    <v-textarea\n        clearable\n        clear-icon=\"mdi-trash-can-outline\"\n        auto-grow\n        label=\"한/영타 변환기\"\n        v-model=\"inputText\"\n    ></v-textarea>\n    {{convertInputText}}\n  </v-container>\n</template>\n\n<script>\nimport { defineComponent } from \"vue\";\n// Components\n\nexport default defineComponent({\n  name: \"HomeView\",\n\n  data: () => ({\n    toKorean: true,\n    inputText: \"\",\n    keyboard: {\n      'ㅂ': 'q', 'ㅈ': 'w', 'ㄷ': 'e', 'ㄱ': 'r', 'ㅅ': 't', 'ㅛ': 'y', 'ㅕ': 'u', 'ㅑ': 'i', 'ㅐ': 'o', 'ㅔ': 'p',\n      'ㅁ': 'a', 'ㄴ': 's', 'ㅇ': 'd', 'ㄹ': 'f', 'ㅎ': 'g', 'ㅗ': 'h', 'ㅓ': 'j', 'ㅏ': 'k', 'ㅣ': 'l',\n      'ㅋ': 'z', 'ㅌ': 'x', 'ㅊ': 'c', 'ㅍ': 'v', 'ㅠ': 'b', 'ㅜ': 'n', 'ㅡ': 'm'\n    }\n  }),\n\n  computed: {\n    convertInputText() {\n      let result = '';\n      for (let i = 0; i < this.inputText.length; i++) {\n        if (this.keyboard[this.inputText[i]]) {\n          result += this.keyboard[this.inputText[i]];\n        } else {\n          result += this.inputText[i];\n        }\n      }\n      return result;\n    },\n    switchLabel(){\n      if (this.toKorean) return \"영어를 한글로\"\n      return \"한글을 영어로\"\n    }\n  },\n\n  methods: {\n    toEnglish(ch) {;\n      let code = ch.charCodeAt(0);\n\n      if (code < this.HANGUL_START || code > this.HANGUL_END) {\n        return ch;\n      }\n\n      const HANGUL_BASE = this.HANGUL_END - this.HANGUL_START + 1;\n\n      let cho = this.HANGUL_CHOSUNG[Math.floor((code - this.HANGUL_START) / HANGUL_BASE / 21)];\n      let jung = this.HANGUL_JUNGSUNG[Math.floor((code - this.HANGUL_START) / HANGUL_BASE) % 21];\n      let jong = this.HANGUL_JONGSUNG[(code - this.HANGUL_START) % 28];\n\n      return cho + jung + jong;\n    }\n  },\n});\n</script>\n<style scoped>\n@font-face {\n  font-family: 'LINESeedKR-Bd';\n  src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_11-01@1.0/LINESeedKR-Bd.woff2') format('woff2');\n  font-weight: 700;\n  font-style: normal;\n}\n\n* {\n  font-family: 'LINESeedKR-Bd';\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}