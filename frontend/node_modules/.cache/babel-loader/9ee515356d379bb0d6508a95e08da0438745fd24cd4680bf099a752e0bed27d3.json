{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_switch = _resolveComponent(\"v-switch\");\n  const _component_v_textarea = _resolveComponent(\"v-textarea\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, {\n    fluid: \"\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_switch, {\n      modelValue: _ctx.toKorean,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.toKorean = $event),\n      \"hide-details\": \"\",\n      inset: \"\",\n      label: _ctx.switchLabel\n    }, null, 8 /* PROPS */, [\"modelValue\", \"label\"]), _createVNode(_component_v_textarea, {\n      clearable: \"\",\n      \"clear-icon\": \"mdi-trash-can-outline\",\n      \"auto-grow\": \"\",\n      label: \"한/영타 변환기\",\n      modelValue: _ctx.inputText,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.inputText = $event)\n    }, null, 8 /* PROPS */, [\"modelValue\"]), _createTextVNode(\" \" + _toDisplayString(_ctx.convertInputText), 1 /* TEXT */)]),\n\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"mappings":";;;;;uBACEA,aAecC;IAfDC,KAAK,EAAL;EAAK;sBAChB,MAKY,CALZC,aAKYC;kBAJCC,aAAQ;iEAARA,aAAQ;MACjB,cAAY,EAAZ,EAAY;MACZC,KAAK,EAAL,EAAK;MACJC,KAAK,EAAEF;sDAEZF,aAMcK;MALVC,SAAS,EAAT,EAAS;MACT,YAAU,EAAC,uBAAuB;MAClC,WAAS,EAAT,EAAS;MACTF,KAAK,EAAC,UAAU;kBACPF,cAAS;iEAATA,cAAS;8DACR,GACd,oBAAEA,qBAAgB","names":["_createBlock","_component_v_container","fluid","_createVNode","_component_v_switch","_ctx","inset","label","_component_v_textarea","clearable"],"sourceRoot":"","sources":["/Users/dundung/Desktop/my-repo/typing-converter/frontend/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <v-container fluid>\n    <v-switch\n        v-model=\"toKorean\"\n        hide-details\n        inset\n        :label=\"switchLabel\"\n    ></v-switch>\n    <v-textarea\n        clearable\n        clear-icon=\"mdi-trash-can-outline\"\n        auto-grow\n        label=\"한/영타 변환기\"\n        v-model=\"inputText\"\n    ></v-textarea>\n    {{convertInputText}}\n  </v-container>\n</template>\n\n<script>\nimport { defineComponent } from \"vue\";\n// Components\n\nexport default defineComponent({\n  name: \"HomeView\",\n\n  data: () => ({\n    toKorean: true,\n    inputText: \"\",\n    HANGUL_START: 0xAC00,\n    HANGUL_END: 0xD7A3,\n    HANGUL_BASE: this.HANGUL_END - this.HANGUL_START + 1,\n    HANGUL_CHOSUNG: [\"ㄱ\", \"ㄲ\", \"ㄴ\", \"ㄷ\", \"ㄸ\", \"ㄹ\", \"ㅁ\", \"ㅂ\", \"ㅃ\", \"ㅅ\", \"ㅆ\", \"ㅇ\", \"ㅈ\", \"ㅉ\", \"ㅊ\", \"ㅋ\", \"ㅌ\", \"ㅍ\", \"ㅎ\"],\n    HANGUL_JUNGSUNG: [\"ㅏ\", \"ㅐ\", \"ㅑ\", \"ㅒ\", \"ㅓ\", \"ㅔ\", \"ㅕ\", \"ㅖ\", \"ㅗ\", \"ㅘ\", \"ㅙ\", \"ㅚ\", \"ㅛ\", \"ㅜ\", \"ㅝ\", \"ㅞ\", \"ㅟ\", \"ㅠ\", \"ㅡ\", \"ㅢ\", \"ㅣ\"],\n    HANGUL_JONGSUNG: [\"\", \"ㄱ\", \"ㄲ\", \"ㄳ\", \"ㄴ\", \"ㄵ\", \"ㄶ\", \"ㄷ\", \"ㄹ\", \"ㄺ\", \"ㄻ\", \"ㄼ\", \"ㄽ\", \"ㄾ\", \"ㄿ\", \"ㅀ\", \"ㅁ\", \"ㅂ\", \"ㅄ\", \"ㅅ\", \"ㅆ\", \"ㅇ\", \"ㅈ\", \"ㅊ\", \"ㅋ\", \"ㅌ\", \"ㅍ\", \"ㅎ\"],\n  }),\n\n  computed: {\n    convertInputText() {\n      let result = \"\";\n      for (let i = 0; i < this.inputText.length; i++) {\n        result += this.toEnglish(this.inputText[i]);\n      }\n      return result\n    },\n    switchLabel(){\n      if (this.toKorean) return \"영어를 한글로\"\n      return \"한글을 영어로\"\n    }\n  },\n\n  methods: {\n    toEnglish(ch) {;\n      let code = ch.charCodeAt(0);\n\n      if (code < this.HANGUL_START || code > this.HANGUL_END) {\n        return ch;\n      }\n\n      let cho = this.HANGUL_CHOSUNG[Math.floor((code - this.HANGUL_START) / this.HANGUL_BASE / 21)];\n      let jung = this.HANGUL_JUNGSUNG[Math.floor((code - this.HANGUL_START) / this.HANGUL_BASE) % 21];\n      let jong = this.HANGUL_JONGSUNG[(code - this.HANGUL_START) % 28];\n\n      return cho + jung + jong;\n    }\n  },\n});\n</script>\n<style scoped>\n@font-face {\n  font-family: 'LINESeedKR-Bd';\n  src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_11-01@1.0/LINESeedKR-Bd.woff2') format('woff2');\n  font-weight: 700;\n  font-style: normal;\n}\n\n* {\n  font-family: 'LINESeedKR-Bd';\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}