{"ast":null,"code":"import { defineComponent } from \"vue\";\n// Components\n\nexport default defineComponent({\n  name: \"HomeView\",\n  data: () => ({\n    toKorean: true,\n    inputText: \"\",\n    keyboard: {\n      'ㅂ': 'q',\n      'ㅈ': 'w',\n      'ㄷ': 'e',\n      'ㄱ': 'r',\n      'ㅅ': 't',\n      'ㅛ': 'y',\n      'ㅕ': 'u',\n      'ㅑ': 'i',\n      'ㅐ': 'o',\n      'ㅔ': 'p',\n      'ㅁ': 'a',\n      'ㄴ': 's',\n      'ㅇ': 'd',\n      'ㄹ': 'f',\n      'ㅎ': 'g',\n      'ㅗ': 'h',\n      'ㅓ': 'j',\n      'ㅏ': 'k',\n      'ㅣ': 'l',\n      'ㅋ': 'z',\n      'ㅌ': 'x',\n      'ㅊ': 'c',\n      'ㅍ': 'v',\n      'ㅠ': 'b',\n      'ㅜ': 'n',\n      'ㅡ': 'm'\n    }\n  }),\n  computed: {\n    convertInputText() {\n      if (this.toKorean) return this.engTypeToKor(this.inputText);\n      return this.korTypeToEng(this.inputText);\n    },\n    switchLabel() {\n      if (this.toKorean) return \"영어를 한글로\";\n      return \"한글을 영어로\";\n    }\n  },\n  methods: {\n    engTypeToKor(src) {\n      var res = \"\";\n      if (src.length == 0) return res;\n      var nCho = -1,\n        nJung = -1,\n        nJong = -1; // 초성, 중성, 종성\n\n      for (var i = 0; i < src.length; i++) {\n        var ch = src.charAt(i);\n        var p = ENG_KEY.indexOf(ch);\n        if (p == -1) {\n          // 영자판이 아님\n          // 남아있는 한글이 있으면 처리\n          if (nCho != -1) {\n            if (nJung != -1)\n              // 초성+중성+(종성)\n              res += makeHangul(nCho, nJung, nJong);else\n              // 초성만\n              res += CHO_DATA.charAt(nCho);\n          } else {\n            if (nJung != -1)\n              // 중성만\n              res += JUNG_DATA.charAt(nJung);else if (nJong != -1)\n              // 복자음\n              res += JONG_DATA.charAt(nJong);\n          }\n          nCho = -1;\n          nJung = -1;\n          nJong = -1;\n          res += ch;\n        } else if (p < 19) {\n          // 자음\n          if (nJung != -1) {\n            if (nCho == -1) {\n              // 중성만 입력됨, 초성으로\n              res += JUNG_DATA.charAt(nJung);\n              nJung = -1;\n              nCho = CHO_DATA.indexOf(KOR_KEY.charAt(p));\n            } else {\n              // 종성이다\n              if (nJong == -1) {\n                // 종성 입력 중\n                nJong = JONG_DATA.indexOf(KOR_KEY.charAt(p));\n                if (nJong == -1) {\n                  // 종성이 아니라 초성이다\n                  res += makeHangul(nCho, nJung, nJong);\n                  nCho = CHO_DATA.indexOf(KOR_KEY.charAt(p));\n                  nJung = -1;\n                }\n              } else if (nJong == 0 && p == 9) {\n                // ㄳ\n                nJong = 2;\n              } else if (nJong == 3 && p == 12) {\n                // ㄵ\n                nJong = 4;\n              } else if (nJong == 3 && p == 18) {\n                // ㄶ\n                nJong = 5;\n              } else if (nJong == 7 && p == 0) {\n                // ㄺ\n                nJong = 8;\n              } else if (nJong == 7 && p == 6) {\n                // ㄻ\n                nJong = 9;\n              } else if (nJong == 7 && p == 7) {\n                // ㄼ\n                nJong = 10;\n              } else if (nJong == 7 && p == 9) {\n                // ㄽ\n                nJong = 11;\n              } else if (nJong == 7 && p == 16) {\n                // ㄾ\n                nJong = 12;\n              } else if (nJong == 7 && p == 17) {\n                // ㄿ\n                nJong = 13;\n              } else if (nJong == 7 && p == 18) {\n                // ㅀ\n                nJong = 14;\n              } else if (nJong == 16 && p == 9) {\n                // ㅄ\n                nJong = 17;\n              } else {\n                // 종성 입력 끝, 초성으로\n                res += makeHangul(nCho, nJung, nJong);\n                nCho = CHO_DATA.indexOf(KOR_KEY.charAt(p));\n                nJung = -1;\n                nJong = -1;\n              }\n            }\n          } else {\n            // 초성 또는 (단/복)자음이다\n            if (nCho == -1) {\n              // 초성 입력 시작\n              if (nJong != -1) {\n                // 복자음 후 초성\n                res += JONG_DATA.charAt(nJong);\n                nJong = -1;\n              }\n              nCho = CHO_DATA.indexOf(KOR_KEY.charAt(p));\n            } else if (nCho == 0 && p == 9) {\n              // ㄳ\n              nCho = -1;\n              nJong = 2;\n            } else if (nCho == 2 && p == 12) {\n              // ㄵ\n              nCho = -1;\n              nJong = 4;\n            } else if (nCho == 2 && p == 18) {\n              // ㄶ\n              nCho = -1;\n              nJong = 5;\n            } else if (nCho == 5 && p == 0) {\n              // ㄺ\n              nCho = -1;\n              nJong = 8;\n            } else if (nCho == 5 && p == 6) {\n              // ㄻ\n              nCho = -1;\n              nJong = 9;\n            } else if (nCho == 5 && p == 7) {\n              // ㄼ\n              nCho = -1;\n              nJong = 10;\n            } else if (nCho == 5 && p == 9) {\n              // ㄽ\n              nCho = -1;\n              nJong = 11;\n            } else if (nCho == 5 && p == 16) {\n              // ㄾ\n              nCho = -1;\n              nJong = 12;\n            } else if (nCho == 5 && p == 17) {\n              // ㄿ\n              nCho = -1;\n              nJong = 13;\n            } else if (nCho == 5 && p == 18) {\n              // ㅀ\n              nCho = -1;\n              nJong = 14;\n            } else if (nCho == 7 && p == 9) {\n              // ㅄ\n              nCho = -1;\n              nJong = 17;\n            } else {\n              // 단자음을 연타\n              res += CHO_DATA.charAt(nCho);\n              nCho = CHO_DATA.indexOf(KOR_KEY.charAt(p));\n            }\n          }\n        } else {\n          // 모음\n          if (nJong != -1) {\n            // (앞글자 종성), 초성+중성\n            // 복자음 다시 분해\n            var newCho; // (임시용) 초성\n            if (nJong == 2) {\n              // ㄱ, ㅅ\n              nJong = 0;\n              newCho = 9;\n            } else if (nJong == 4) {\n              // ㄴ, ㅈ\n              nJong = 3;\n              newCho = 12;\n            } else if (nJong == 5) {\n              // ㄴ, ㅎ\n              nJong = 3;\n              newCho = 18;\n            } else if (nJong == 8) {\n              // ㄹ, ㄱ\n              nJong = 7;\n              newCho = 0;\n            } else if (nJong == 9) {\n              // ㄹ, ㅁ\n              nJong = 7;\n              newCho = 6;\n            } else if (nJong == 10) {\n              // ㄹ, ㅂ\n              nJong = 7;\n              newCho = 7;\n            } else if (nJong == 11) {\n              // ㄹ, ㅅ\n              nJong = 7;\n              newCho = 9;\n            } else if (nJong == 12) {\n              // ㄹ, ㅌ\n              nJong = 7;\n              newCho = 16;\n            } else if (nJong == 13) {\n              // ㄹ, ㅍ\n              nJong = 7;\n              newCho = 17;\n            } else if (nJong == 14) {\n              // ㄹ, ㅎ\n              nJong = 7;\n              newCho = 18;\n            } else if (nJong == 17) {\n              // ㅂ, ㅅ\n              nJong = 16;\n              newCho = 9;\n            } else {\n              // 복자음 아님\n              newCho = CHO_DATA.indexOf(JONG_DATA.charAt(nJong));\n              nJong = -1;\n            }\n            if (nCho != -1)\n              // 앞글자가 초성+중성+(종성)\n              res += makeHangul(nCho, nJung, nJong);else\n              // 복자음만 있음\n              res += JONG_DATA.charAt(nJong);\n            nCho = newCho;\n            nJung = -1;\n            nJong = -1;\n          }\n          if (nJung == -1) {\n            // 중성 입력 중\n            nJung = JUNG_DATA.indexOf(KOR_KEY.charAt(p));\n          } else if (nJung == 8 && p == 19) {\n            // ㅘ\n            nJung = 9;\n          } else if (nJung == 8 && p == 20) {\n            // ㅙ\n            nJung = 10;\n          } else if (nJung == 8 && p == 32) {\n            // ㅚ\n            nJung = 11;\n          } else if (nJung == 13 && p == 23) {\n            // ㅝ\n            nJung = 14;\n          } else if (nJung == 13 && p == 24) {\n            // ㅞ\n            nJung = 15;\n          } else if (nJung == 13 && p == 32) {\n            // ㅟ\n            nJung = 16;\n          } else if (nJung == 18 && p == 32) {\n            // ㅢ\n            nJung = 19;\n          } else {\n            // 조합 안되는 모음 입력\n            if (nCho != -1) {\n              // 초성+중성 후 중성\n              res += makeHangul(nCho, nJung, nJong);\n              nCho = -1;\n            } else\n              // 중성 후 중성\n              res += JUNG_DATA.charAt(nJung);\n            nJung = -1;\n            res += KOR_KEY.charAt(p);\n          }\n        }\n      }\n\n      // 마지막 한글이 있으면 처리\n      if (nCho != -1) {\n        if (nJung != -1)\n          // 초성+중성+(종성)\n          res += makeHangul(nCho, nJung, nJong);else\n          // 초성만\n          res += CHO_DATA.charAt(nCho);\n      } else {\n        if (nJung != -1)\n          // 중성만\n          res += JUNG_DATA.charAt(nJung);else {\n          // 복자음\n          if (nJong != -1) res += JONG_DATA.charAt(nJong);\n        }\n      }\n      return res;\n    },\n    makeHangul(nCho, nJung, nJong) {\n      return String.fromCharCode(0xac00 + nCho * 21 * 28 + nJung * 28 + nJong + 1);\n    },\n    korTypeToEng(src) {\n      var res = \"\";\n      if (src.length == 0) return res;\n      for (var i = 0; i < src.length; i++) {\n        var ch = src.charAt(i);\n        var nCode = ch.charCodeAt(0);\n        var nCho = CHO_DATA.indexOf(ch),\n          nJung = JUNG_DATA.indexOf(ch),\n          nJong = JONG_DATA.indexOf(ch);\n        var arrKeyIndex = [-1, -1, -1, -1, -1];\n        if (0xac00 <= nCode && nCode <= 0xd7a3) {\n          nCode -= 0xac00;\n          arrKeyIndex[0] = Math.floor(nCode / (21 * 28)); // 초성\n          arrKeyIndex[1] = Math.floor(nCode / 28) % 21; // 중성\n          arrKeyIndex[3] = nCode % 28 - 1; // 종성\n        } else if (nCho != -1)\n          // 초성 자음\n          arrKeyIndex[0] = nCho;else if (nJung != -1)\n          // 중성\n          arrKeyIndex[1] = nJung;else if (nJong != -1)\n          // 종성 자음\n          arrKeyIndex[3] = nJong;else\n          // 한글이 아님\n          res += ch;\n\n        // 실제 Key Index로 변경. 초성은 순서 동일\n        if (arrKeyIndex[1] != -1) {\n          if (arrKeyIndex[1] == 9) {\n            // ㅘ\n            arrKeyIndex[1] = 27;\n            arrKeyIndex[2] = 19;\n          } else if (arrKeyIndex[1] == 10) {\n            // ㅙ\n            arrKeyIndex[1] = 27;\n            arrKeyIndex[2] = 20;\n          } else if (arrKeyIndex[1] == 11) {\n            // ㅚ\n            arrKeyIndex[1] = 27;\n            arrKeyIndex[2] = 32;\n          } else if (arrKeyIndex[1] == 14) {\n            // ㅝ\n            arrKeyIndex[1] = 29;\n            arrKeyIndex[2] = 23;\n          } else if (arrKeyIndex[1] == 15) {\n            // ㅞ\n            arrKeyIndex[1] = 29;\n            arrKeyIndex[2] = 24;\n          } else if (arrKeyIndex[1] == 16) {\n            // ㅟ\n            arrKeyIndex[1] = 29;\n            arrKeyIndex[2] = 32;\n          } else if (arrKeyIndex[1] == 19) {\n            // ㅢ\n            arrKeyIndex[1] = 31;\n            arrKeyIndex[2] = 32;\n          } else {\n            arrKeyIndex[1] = KOR_KEY.indexOf(JUNG_DATA.charAt(arrKeyIndex[1]));\n            arrKeyIndex[2] = -1;\n          }\n        }\n        if (arrKeyIndex[3] != -1) {\n          if (arrKeyIndex[3] == 2) {\n            // ㄳ\n            arrKeyIndex[3] = 0;\n            arrKeyIndex[4] = 9;\n          } else if (arrKeyIndex[3] == 4) {\n            // ㄵ\n            arrKeyIndex[3] = 2;\n            arrKeyIndex[4] = 12;\n          } else if (arrKeyIndex[3] == 5) {\n            // ㄶ\n            arrKeyIndex[3] = 2;\n            arrKeyIndex[4] = 18;\n          } else if (arrKeyIndex[3] == 8) {\n            // ㄺ\n            arrKeyIndex[3] = 5;\n            arrKeyIndex[4] = 0;\n          } else if (arrKeyIndex[3] == 9) {\n            // ㄻ\n            arrKeyIndex[3] = 5;\n            arrKeyIndex[4] = 6;\n          } else if (arrKeyIndex[3] == 10) {\n            // ㄼ\n            arrKeyIndex[3] = 5;\n            arrKeyIndex[4] = 7;\n          } else if (arrKeyIndex[3] == 11) {\n            // ㄽ\n            arrKeyIndex[3] = 5;\n            arrKeyIndex[4] = 9;\n          } else if (arrKeyIndex[3] == 12) {\n            // ㄾ\n            arrKeyIndex[3] = 5;\n            arrKeyIndex[4] = 16;\n          } else if (arrKeyIndex[3] == 13) {\n            // ㄿ\n            arrKeyIndex[3] = 5;\n            arrKeyIndex[4] = 17;\n          } else if (arrKeyIndex[3] == 14) {\n            // ㅀ\n            arrKeyIndex[3] = 5;\n            arrKeyIndex[4] = 18;\n          } else if (arrKeyIndex[3] == 17) {\n            // ㅄ\n            arrKeyIndex[3] = 7;\n            arrKeyIndex[4] = 9;\n          } else {\n            arrKeyIndex[3] = KOR_KEY.indexOf(JONG_DATA.charAt(arrKeyIndex[3]));\n            arrKeyIndex[4] = -1;\n          }\n        }\n        for (var j = 0; j < 5; j++) {\n          if (arrKeyIndex[j] != -1) res += ENG_KEY.charAt(arrKeyIndex[j]);\n        }\n      }\n      return res;\n    }\n  }\n});","map":{"version":3,"mappings":"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","names":["defineComponent","name","data","toKorean","inputText","keyboard","computed","convertInputText","engTypeToKor","korTypeToEng","switchLabel","methods","src","res","length","nCho","nJung","nJong","i","ch","charAt","p","ENG_KEY","indexOf","makeHangul","CHO_DATA","JUNG_DATA","JONG_DATA","KOR_KEY","newCho","String","fromCharCode","nCode","charCodeAt","arrKeyIndex","Math","floor","j"],"sourceRoot":"","sources":["/Users/dundung/Desktop/my-repo/typing-converter/frontend/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <v-container fluid>\n    <v-switch\n        v-model=\"toKorean\"\n        hide-details\n        inset\n        :label=\"switchLabel\"\n    ></v-switch>\n    <v-textarea\n        clearable\n        clear-icon=\"mdi-trash-can-outline\"\n        auto-grow\n        label=\"한/영타 변환기\"\n        v-model=\"inputText\"\n    ></v-textarea>\n    {{ convertInputText }}\n  </v-container>\n</template>\n\n<script>\nimport {defineComponent} from \"vue\";\n// Components\n\nexport default defineComponent({\n  name: \"HomeView\",\n\n  data: () => ({\n    toKorean: true,\n    inputText: \"\",\n    keyboard: {\n      'ㅂ': 'q', 'ㅈ': 'w', 'ㄷ': 'e', 'ㄱ': 'r', 'ㅅ': 't', 'ㅛ': 'y', 'ㅕ': 'u', 'ㅑ': 'i', 'ㅐ': 'o', 'ㅔ': 'p',\n      'ㅁ': 'a', 'ㄴ': 's', 'ㅇ': 'd', 'ㄹ': 'f', 'ㅎ': 'g', 'ㅗ': 'h', 'ㅓ': 'j', 'ㅏ': 'k', 'ㅣ': 'l',\n      'ㅋ': 'z', 'ㅌ': 'x', 'ㅊ': 'c', 'ㅍ': 'v', 'ㅠ': 'b', 'ㅜ': 'n', 'ㅡ': 'm'\n    }\n  }),\n\n  computed: {\n    convertInputText() {\n      if (this.toKorean) return this.engTypeToKor(this.inputText);\n      return this.korTypeToEng(this.inputText);\n    },\n    switchLabel() {\n      if (this.toKorean) return \"영어를 한글로\"\n      return \"한글을 영어로\"\n    }\n  },\n\n  methods: {\n    engTypeToKor(src) {\n      var res = \"\";\n      if (src.length == 0)\n        return res;\n\n      var nCho = -1, nJung = -1, nJong = -1;\t\t// 초성, 중성, 종성\n\n      for (var i = 0; i < src.length; i++) {\n        var ch = src.charAt(i);\n        var p = ENG_KEY.indexOf(ch);\n        if (p == -1) {\t\t\t\t// 영자판이 아님\n          // 남아있는 한글이 있으면 처리\n          if (nCho != -1) {\n            if (nJung != -1)\t\t\t\t// 초성+중성+(종성)\n              res += makeHangul(nCho, nJung, nJong);\n            else\t\t\t\t\t\t\t// 초성만\n              res += CHO_DATA.charAt(nCho);\n          } else {\n            if (nJung != -1)\t\t\t\t// 중성만\n              res += JUNG_DATA.charAt(nJung);\n            else if (nJong != -1)\t\t\t// 복자음\n              res += JONG_DATA.charAt(nJong);\n          }\n          nCho = -1;\n          nJung = -1;\n          nJong = -1;\n          res += ch;\n        } else if (p < 19) {\t\t\t// 자음\n          if (nJung != -1) {\n            if (nCho == -1) {\t\t\t\t\t// 중성만 입력됨, 초성으로\n              res += JUNG_DATA.charAt(nJung);\n              nJung = -1;\n              nCho = CHO_DATA.indexOf(KOR_KEY.charAt(p));\n            } else {\t\t\t\t\t\t\t// 종성이다\n              if (nJong == -1) {\t\t\t\t// 종성 입력 중\n                nJong = JONG_DATA.indexOf(KOR_KEY.charAt(p));\n                if (nJong == -1) {\t\t\t// 종성이 아니라 초성이다\n                  res += makeHangul(nCho, nJung, nJong);\n                  nCho = CHO_DATA.indexOf(KOR_KEY.charAt(p));\n                  nJung = -1;\n                }\n              } else if (nJong == 0 && p == 9) {\t\t\t// ㄳ\n                nJong = 2;\n              } else if (nJong == 3 && p == 12) {\t\t\t// ㄵ\n                nJong = 4;\n              } else if (nJong == 3 && p == 18) {\t\t\t// ㄶ\n                nJong = 5;\n              } else if (nJong == 7 && p == 0) {\t\t\t// ㄺ\n                nJong = 8;\n              } else if (nJong == 7 && p == 6) {\t\t\t// ㄻ\n                nJong = 9;\n              } else if (nJong == 7 && p == 7) {\t\t\t// ㄼ\n                nJong = 10;\n              } else if (nJong == 7 && p == 9) {\t\t\t// ㄽ\n                nJong = 11;\n              } else if (nJong == 7 && p == 16) {\t\t\t// ㄾ\n                nJong = 12;\n              } else if (nJong == 7 && p == 17) {\t\t\t// ㄿ\n                nJong = 13;\n              } else if (nJong == 7 && p == 18) {\t\t\t// ㅀ\n                nJong = 14;\n              } else if (nJong == 16 && p == 9) {\t\t\t// ㅄ\n                nJong = 17;\n              } else {\t\t\t\t\t\t// 종성 입력 끝, 초성으로\n                res += makeHangul(nCho, nJung, nJong);\n                nCho = CHO_DATA.indexOf(KOR_KEY.charAt(p));\n                nJung = -1;\n                nJong = -1;\n              }\n            }\n          } else {\t\t\t\t\t\t\t\t// 초성 또는 (단/복)자음이다\n            if (nCho == -1) {\t\t\t\t\t// 초성 입력 시작\n              if (nJong != -1) {\t\t\t\t// 복자음 후 초성\n                res += JONG_DATA.charAt(nJong);\n                nJong = -1;\n              }\n              nCho = CHO_DATA.indexOf(KOR_KEY.charAt(p));\n            } else if (nCho == 0 && p == 9) {\t\t\t// ㄳ\n              nCho = -1;\n              nJong = 2;\n            } else if (nCho == 2 && p == 12) {\t\t\t// ㄵ\n              nCho = -1;\n              nJong = 4;\n            } else if (nCho == 2 && p == 18) {\t\t\t// ㄶ\n              nCho = -1;\n              nJong = 5;\n            } else if (nCho == 5 && p == 0) {\t\t\t// ㄺ\n              nCho = -1;\n              nJong = 8;\n            } else if (nCho == 5 && p == 6) {\t\t\t// ㄻ\n              nCho = -1;\n              nJong = 9;\n            } else if (nCho == 5 && p == 7) {\t\t\t// ㄼ\n              nCho = -1;\n              nJong = 10;\n            } else if (nCho == 5 && p == 9) {\t\t\t// ㄽ\n              nCho = -1;\n              nJong = 11;\n            } else if (nCho == 5 && p == 16) {\t\t\t// ㄾ\n              nCho = -1;\n              nJong = 12;\n            } else if (nCho == 5 && p == 17) {\t\t\t// ㄿ\n              nCho = -1;\n              nJong = 13;\n            } else if (nCho == 5 && p == 18) {\t\t\t// ㅀ\n              nCho = -1;\n              nJong = 14;\n            } else if (nCho == 7 && p == 9) {\t\t\t// ㅄ\n              nCho = -1;\n              nJong = 17;\n            } else {\t\t\t\t\t\t\t// 단자음을 연타\n              res += CHO_DATA.charAt(nCho);\n              nCho = CHO_DATA.indexOf(KOR_KEY.charAt(p));\n            }\n          }\n        } else {\t\t\t\t\t\t\t\t\t// 모음\n          if (nJong != -1) {\t\t\t\t\t\t// (앞글자 종성), 초성+중성\n            // 복자음 다시 분해\n            var newCho;\t\t\t// (임시용) 초성\n            if (nJong == 2) {\t\t\t\t\t// ㄱ, ㅅ\n              nJong = 0;\n              newCho = 9;\n            } else if (nJong == 4) {\t\t\t// ㄴ, ㅈ\n              nJong = 3;\n              newCho = 12;\n            } else if (nJong == 5) {\t\t\t// ㄴ, ㅎ\n              nJong = 3;\n              newCho = 18;\n            } else if (nJong == 8) {\t\t\t// ㄹ, ㄱ\n              nJong = 7;\n              newCho = 0;\n            } else if (nJong == 9) {\t\t\t// ㄹ, ㅁ\n              nJong = 7;\n              newCho = 6;\n            } else if (nJong == 10) {\t\t\t// ㄹ, ㅂ\n              nJong = 7;\n              newCho = 7;\n            } else if (nJong == 11) {\t\t\t// ㄹ, ㅅ\n              nJong = 7;\n              newCho = 9;\n            } else if (nJong == 12) {\t\t\t// ㄹ, ㅌ\n              nJong = 7;\n              newCho = 16;\n            } else if (nJong == 13) {\t\t\t// ㄹ, ㅍ\n              nJong = 7;\n              newCho = 17;\n            } else if (nJong == 14) {\t\t\t// ㄹ, ㅎ\n              nJong = 7;\n              newCho = 18;\n            } else if (nJong == 17) {\t\t\t// ㅂ, ㅅ\n              nJong = 16;\n              newCho = 9;\n            } else {\t\t\t\t\t\t\t// 복자음 아님\n              newCho = CHO_DATA.indexOf(JONG_DATA.charAt(nJong));\n              nJong = -1;\n            }\n            if (nCho != -1)\t\t\t// 앞글자가 초성+중성+(종성)\n              res += makeHangul(nCho, nJung, nJong);\n            else                    // 복자음만 있음\n              res += JONG_DATA.charAt(nJong);\n\n            nCho = newCho;\n            nJung = -1;\n            nJong = -1;\n          }\n          if (nJung == -1) {\t\t\t\t\t\t// 중성 입력 중\n            nJung = JUNG_DATA.indexOf(KOR_KEY.charAt(p));\n          } else if (nJung == 8 && p == 19) {            // ㅘ\n            nJung = 9;\n          } else if (nJung == 8 && p == 20) {            // ㅙ\n            nJung = 10;\n          } else if (nJung == 8 && p == 32) {            // ㅚ\n            nJung = 11;\n          } else if (nJung == 13 && p == 23) {           // ㅝ\n            nJung = 14;\n          } else if (nJung == 13 && p == 24) {           // ㅞ\n            nJung = 15;\n          } else if (nJung == 13 && p == 32) {           // ㅟ\n            nJung = 16;\n          } else if (nJung == 18 && p == 32) {           // ㅢ\n            nJung = 19;\n          } else {\t\t\t// 조합 안되는 모음 입력\n            if (nCho != -1) {\t\t\t// 초성+중성 후 중성\n              res += makeHangul(nCho, nJung, nJong);\n              nCho = -1;\n            } else\t\t\t\t\t\t// 중성 후 중성\n              res += JUNG_DATA.charAt(nJung);\n            nJung = -1;\n            res += KOR_KEY.charAt(p);\n          }\n        }\n      }\n\n      // 마지막 한글이 있으면 처리\n      if (nCho != -1) {\n        if (nJung != -1)\t\t\t// 초성+중성+(종성)\n          res += makeHangul(nCho, nJung, nJong);\n        else                \t\t// 초성만\n          res += CHO_DATA.charAt(nCho);\n      } else {\n        if (nJung != -1)\t\t\t// 중성만\n          res += JUNG_DATA.charAt(nJung);\n        else {\t\t\t\t\t\t// 복자음\n          if (nJong != -1)\n            res += JONG_DATA.charAt(nJong);\n        }\n      }\n\n      return res;\n    },\n    makeHangul(nCho, nJung, nJong) {\n      return String.fromCharCode(0xac00 + nCho * 21 * 28 + nJung * 28 + nJong + 1);\n    },\n\n    korTypeToEng(src) {\n      var res = \"\";\n      if (src.length == 0)\n        return res;\n\n      for (var i = 0; i < src.length; i++) {\n        var ch = src.charAt(i);\n        var nCode = ch.charCodeAt(0);\n        var nCho = CHO_DATA.indexOf(ch), nJung = JUNG_DATA.indexOf(ch), nJong = JONG_DATA.indexOf(ch);\n        var arrKeyIndex = [-1, -1, -1, -1, -1];\n\n        if (0xac00 <= nCode && nCode <= 0xd7a3) {\n          nCode -= 0xac00;\n          arrKeyIndex[0] = Math.floor(nCode / (21 * 28));\t\t\t// 초성\n          arrKeyIndex[1] = Math.floor(nCode / 28) % 21;\t\t\t// 중성\n          arrKeyIndex[3] = nCode % 28 - 1;\t\t\t\t\t\t// 종성\n        } else if (nCho != -1)\t\t\t// 초성 자음\n          arrKeyIndex[0] = nCho;\n        else if (nJung != -1)\t\t\t// 중성\n          arrKeyIndex[1] = nJung;\n        else if (nJong != -1)\t\t\t// 종성 자음\n          arrKeyIndex[3] = nJong;\n        else\t\t\t\t\t\t\t// 한글이 아님\n          res += ch;\n\n        // 실제 Key Index로 변경. 초성은 순서 동일\n        if (arrKeyIndex[1] != -1) {\n          if (arrKeyIndex[1] == 9) {\t\t\t\t\t// ㅘ\n            arrKeyIndex[1] = 27;\n            arrKeyIndex[2] = 19;\n          } else if (arrKeyIndex[1] == 10) {\t\t\t// ㅙ\n            arrKeyIndex[1] = 27;\n            arrKeyIndex[2] = 20;\n          } else if (arrKeyIndex[1] == 11) {\t\t\t// ㅚ\n            arrKeyIndex[1] = 27;\n            arrKeyIndex[2] = 32;\n          } else if (arrKeyIndex[1] == 14) {\t\t\t// ㅝ\n            arrKeyIndex[1] = 29;\n            arrKeyIndex[2] = 23;\n          } else if (arrKeyIndex[1] == 15) {\t\t\t// ㅞ\n            arrKeyIndex[1] = 29;\n            arrKeyIndex[2] = 24;\n          } else if (arrKeyIndex[1] == 16) {\t\t\t// ㅟ\n            arrKeyIndex[1] = 29;\n            arrKeyIndex[2] = 32;\n          } else if (arrKeyIndex[1] == 19) {\t\t\t// ㅢ\n            arrKeyIndex[1] = 31;\n            arrKeyIndex[2] = 32;\n          } else {\n            arrKeyIndex[1] = KOR_KEY.indexOf(JUNG_DATA.charAt(arrKeyIndex[1]));\n            arrKeyIndex[2] = -1;\n          }\n        }\n        if (arrKeyIndex[3] != -1) {\n          if (arrKeyIndex[3] == 2) {\t\t\t\t\t// ㄳ\n            arrKeyIndex[3] = 0\n            arrKeyIndex[4] = 9;\n          } else if (arrKeyIndex[3] == 4) {\t\t\t// ㄵ\n            arrKeyIndex[3] = 2;\n            arrKeyIndex[4] = 12;\n          } else if (arrKeyIndex[3] == 5) {\t\t\t// ㄶ\n            arrKeyIndex[3] = 2;\n            arrKeyIndex[4] = 18;\n          } else if (arrKeyIndex[3] == 8) {\t\t\t// ㄺ\n            arrKeyIndex[3] = 5;\n            arrKeyIndex[4] = 0;\n          } else if (arrKeyIndex[3] == 9) {\t\t\t// ㄻ\n            arrKeyIndex[3] = 5;\n            arrKeyIndex[4] = 6;\n          } else if (arrKeyIndex[3] == 10) {\t\t\t// ㄼ\n            arrKeyIndex[3] = 5;\n            arrKeyIndex[4] = 7;\n          } else if (arrKeyIndex[3] == 11) {\t\t\t// ㄽ\n            arrKeyIndex[3] = 5;\n            arrKeyIndex[4] = 9;\n          } else if (arrKeyIndex[3] == 12) {\t\t\t// ㄾ\n            arrKeyIndex[3] = 5;\n            arrKeyIndex[4] = 16;\n          } else if (arrKeyIndex[3] == 13) {\t\t\t// ㄿ\n            arrKeyIndex[3] = 5;\n            arrKeyIndex[4] = 17;\n          } else if (arrKeyIndex[3] == 14) {\t\t\t// ㅀ\n            arrKeyIndex[3] = 5;\n            arrKeyIndex[4] = 18;\n          } else if (arrKeyIndex[3] == 17) {\t\t\t// ㅄ\n            arrKeyIndex[3] = 7;\n            arrKeyIndex[4] = 9;\n          } else {\n            arrKeyIndex[3] = KOR_KEY.indexOf(JONG_DATA.charAt(arrKeyIndex[3]));\n            arrKeyIndex[4] = -1;\n          }\n        }\n\n        for (var j = 0; j < 5; j++) {\n          if (arrKeyIndex[j] != -1)\n            res += ENG_KEY.charAt(arrKeyIndex[j]);\n        }\n      }\n\n      return res;\n    }\n  },\n});\n</script>\n<style scoped>\n@font-face {\n  font-family: 'LINESeedKR-Bd';\n  src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_11-01@1.0/LINESeedKR-Bd.woff2') format('woff2');\n  font-weight: 700;\n  font-style: normal;\n}\n\n* {\n  font-family: 'LINESeedKR-Bd';\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}